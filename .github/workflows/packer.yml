# This is a basic workflow to help you get started with Actions

name: Packer

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    paths-ignore:   # 下列文件的变更不触发部署，可以自行添加
        - README.md
        - LICENSE
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  pack:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: 'main'
          
      - name: deal main
        run: |
          mkdir ../release
          mv models_data.json ../release/
          
      - uses: actions/checkout@v3
        with:
          ref: 'zh_cn'
          
      # Runs a single command using the runners shell
      - name: deal zh_cn
        run: |
          zip -r ../release/zh_cn.zip . -x "./.git/*"
          
      - uses: actions/checkout@v3
        with:
          ref: 'en_us'
          
      - name: deal en_us
        run: |
          zip -r ../release/en_us.zip . -x "./.git/*"
          
      - uses: actions/checkout@v3
        with:
          ref: 'ko_kr'
          
      - name: deal ko_kr
        run: |
          zip -r ../release/ko_kr.zip . -x "./.git/*"
          
      - uses: actions/checkout@v3
        with:
          ref: 'ja_jp'
          
      - name: deal ja_jp
        run: |
          zip -r ../release/ja_jp.zip . -x "./.git/*"
              
      - uses: actions/checkout@v3
        with:
          ref: 'other'
          
      - name: deal other
        run: |
          zip -r ../release/other.zip . -x "./.git/*"
          cd ../release
          ls
          
      - name: Create timestamp
        id: create_timestamp
        run: echo "::set-output name=timestamp::$(date '+%Y%m%d%H%M%s')"
        shell: bash
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.create_timestamp.outputs.timestamp }}
          release_name: 语音包发布-${{ steps.create_timestamp.outputs.timestamp }}
          body: Github Workflow 自动打包
          draft: false
          prerelease: false
        
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./zh_cn.zip
          asset_name: zh_cn.zip
          asset_content_type: application/zip
                  
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./en_us.zip
          asset_name: en_us.zip
          asset_content_type: application/zip
                  
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./ja_jp.zip
          asset_name: ja_jp.zip
          asset_content_type: application/zip
                  
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./ko_kr.zip
          asset_name: ko_kr.zip
          asset_content_type: application/zip
                  
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./other.zip
          asset_name: other.zip
          asset_content_type: application/zip
        
                          
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./models_data.json
          asset_name: models_data.json
          asset_content_type: application/json
